astro cli can be downloaded here:
https://www.astronomer.io/docs/astro/cli/install-cli/

ensure that astro is in your environment variables

docker instance should be running

astro commands:
cd "...\BT4221-amazon\pyspark"
astro dev start

pa/s/swrrd
admin (twice)


other commands:
astro dev restart
astro dev stop
astro dev kill
docker stop $(docker ps -a -q)
wsl --shutdown

#copy files from running container
docker ps
docker cp 019185eced38:/tmp/Kindle_Store_output.parquet "C:\Users\cephe\Desktop\UNI Mods\y3s2\BT4301\Grp Prj\BT4221-amazon\pyspark\include"


rare commands:
astro dev init  - reinitialise an entire boilerplate

AIRFLOW_CORE_PARALLELISM The maximum number of task instances that can run concurrently for each scheduler in your Deployment.
AIRFLOW__KUBERNETES_EXECUTOR__WORKER_PODS_CREATION_BATCH_SIZE The number of worker Pods that can be created each time the scheduler parses DAGs. This setting limits the number of tasks that can be scheduled at one time.


BASE_DIR = os.path.dirname(os.path.abspath(__file__)) # /usr/local/airflow/dags



initial errors:
[2025-03-16, 20:39:10 +08] {spark_submit.py:634} INFO - : org.apache.spark.SparkException: Not enough memory to build and broadcast the table to all worker nodes
Spark tries to broadcast a small lookup table (in this case, the aggregated counts for user IDs and parent ASINs) to all worker nodes but the driver does not have sufficient memory to build and send this broadcasted table.
used broadcast joins for the small count tables to optimize the join performance by avoiding shuffles. The Spark session was configured with a driver memory of 4 GB, which in some cases might be insufficient when broadcasting data across nodes.
two main options to resolve this issue:
Increase Driver Memory: Increase the driver memory allocation (for example, to 8 GB) so that the driver can handle the broadcast.
Disable Broadcast Join: Disable automatic broadcast by setting spark.sql.autoBroadcastJoinThreshold to -1, so that Spark falls back to a shuffle join instead of attempting a broadcast join.

